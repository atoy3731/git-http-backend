---

apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "2"
    field.cattle.io/creatorId: user-cgt58
  creationTimestamp: "2020-08-31T15:27:49Z"
  generation: 2
  labels:
    cattle.io/creator: norman
    workload.user.cattle.io/workloadselector: deployment-git-git-http-backend
  name: git-http-backend
  namespace: git
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      workload.user.cattle.io/workloadselector: deployment-git-git-http-backend
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cattle.io/timestamp: "2020-08-31T17:42:58Z"
        field.cattle.io/ports: '[[{"containerPort":80,"dnsName":"git-http-backend","hostPort":0,"kind":"ClusterIP","name":"http","protocol":"TCP","sourcePort":0}]]'
      creationTimestamp: null
      labels:
        workload.user.cattle.io/workloadselector: deployment-git-git-http-backend
    spec:
      containers:
      - env:
        - name: INIT_REPOS
          value: nyancat,demo
        image: bgulla/git-http-backend
        imagePullPolicy: Always
        name: git-http-backend
        ports:
        - containerPort: 80
          name: http
          protocol: TCP
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities: {}
          privileged: false
          readOnlyRootFilesystem: false
          runAsNonRoot: false
        stdin: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        tty: true
        volumeMounts:
        - mountPath: /git
          name: gitvol
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - hostPath:
          path: /opt/git
          type: DirectoryOrCreate
        name: gitvol
